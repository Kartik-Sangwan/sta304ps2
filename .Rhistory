#remotes::install_github("hodgettsp/cesR")
library(tidyverse)
library(visdat)
library(cesR)
library(skimr)
# STRATIFICATION BY PROVINCE
survey_data <- arrange(survey_data, province)
survey_data <- survey_data %>% mutate(id = row_number())
last_rows <- survey_data %>% group_by(province) %>% summarise_all(last)
last_rows
provinces_row_numbers <- data.frame(province = c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
province_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = ""
)
set.seed(1001)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
province_strat_res <- rbind(province_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
province_strat_res
# STRATIFICATION BY INCOME
# first arrange the data according to the income categories
survey_data <- arrange(survey_data, salary)
# add the row ids
survey_data <- survey_data %>% mutate(id = row_number())
# find row_ids where the stratas end
last_rows <- survey_data %>% group_by(salary) %>% summarise_all(last)
last_rows
# Creating the dataframe for each of the strata and corresponding last row id
income_row_numbers <- data.frame(income = c("$1 to $30,000", "$110,001 to $150,000", "$150,001 to $200,000", "$30,001 to $60,000", "$60,001 to $90,000" , "$90,001 to $110,000", "Don't know/ Prefer not to answer", "More than $200,000", "No income"), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
# final result
income_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = "")
#
i <- 0
p <- 1
for (ind in income_row_numbers$row_num){
print(paste("new strata for:", income_row_numbers$income[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
income_strat_res <- rbind(income_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
income_strat_res
# STRATIFICATION BY AGE
survey_data <- arrange(survey_data, age)
# add the row ids
survey_data <- survey_data %>% mutate(id = row_number())
# find row_ids where the stratas end
last_rows <- survey_data %>% group_by(age) %>% summarise_all(last)
last_rows
# Creating the dataframe for each of the strata and corresponding last row id
age_row_numbers <- data.frame(age = c("18-30", "31-40", "41-50", "51-60","61-70" ,"71+" ), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
# final result
age_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = "")
#
i <- 0
p <- 1
for (ind in age_row_numbers$row_num){
print(paste("new strata for:", age_row_numbers$age[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
age_strat_res <- rbind(age_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
age_strat_res
unlink('ps2_cache', recursive = TRUE)
# install.packages("tidyverse")
#install.packages("remotes")
#remotes::install_github("hodgettsp/cesR")
install.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
# install.packages("tidyverse")
#install.packages("remotes")
#remotes::install_github("hodgettsp/cesR")
library(tinytex)
#cesR::get_decon()
total <- 37822
age <- decon %>% select("yob") %>% mutate(age = 2020 - as.numeric(as.character(yob)))
age_cat <- age %>% mutate(age_group = case_when(age >= 18 & age <= 30 ~ 1, age >= 31 & age <= 40 ~ 2, age >= 41 & age <= 50 ~ 3, age >= 51 & age <= 60 ~ 4, age >= 61 & age <= 70 ~ 5, age>=71 ~ 6))
gender_weights <- decon %>% count(gender)
province_weights <- decon %>% count(province_territory)
education_weights <- decon %>% count(education)
education_weights <- c(522, 7514, 12096, 12908, 4782)
income_cat_weights <- decon %>% count(income_cat) %>% add_row("income_cat" = "prefer not to answer", n = 28453)
income_cat_weights <- income_cat_weights[-c(9, 10),]
age_group_weights <- age_cat %>% count(age_group)
# fix this later
first_time_voter_weight <- c(ceiling(0.2*total), ceiling(0.8*total) - 1)
decided_to_vote <- c(29346, 8476)
# fake improve later on
ethnicity <- c(ceiling(0.05*total)-1, ceiling(0.12*total)-1, ceiling(0.04*total)-1, ceiling(0.26*total), ceiling(0.34*total), ceiling(0.09*total), ceiling(0.1*total))
# from wikipedia
last_election_vote <- data.frame(party = c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"), votes = c(ceiling(0.45*total)-1, ceiling(0.35*total)-1, ceiling(0.009*total)-1, ceiling(0.07*total), ceiling(0.09*total), ceiling(0.01*total), ceiling(0.01*total)-1, ceiling(0.011*total)))
temp <- rnorm(8, 0, 2)
preference_weights <- c(0.36, 0.24, 0.1, 0.08, 0.02, 0.16, 0.02, 0.02)
# convert rep to SRS
# creating the dataset from our survey using real world parameters and cesR data
survey_responses <- data.frame(gender = sample(c("Male", "Female", "LGBTQ"), total, replace = TRUE, prob = gender_weights$n),
age = sample(c("18-30", "31-40", "41-50", "51-60", "61-70", "71+"), total, TRUE,age_group_weights$n),
first_time_vote = sample(c("YES", "NO"),total, TRUE, first_time_voter_weight),
decided_to_vote = sample(c("YES", "NO"),total,TRUE, decided_to_vote),
education = sample(c("None", "High School", "College/Diploma", "University (Bachelor's Degree)", "University (Master's/PhD)"),total,TRUE, education_weights),
salary = sample(c("No income", "$1 to $30,000", "$30,001 to $60,000", "$60,001 to $90,000", "$90,001 to $110,000", "$110,001 to $150,000", "$150,001 to $200,000", "More than $200,000", "Don't know/ Prefer not to answer"),total, TRUE, income_cat_weights$n),
province = sample(c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"),total, TRUE, province_weights$n),
last_election_vote = sample( c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"),total,TRUE, last_election_vote$votes),
ethnicity = sample(c("Caucasian", "African", "Hispanic or Latino", "East Asian", "South Asian", "I am one of the Indigenous Peoples of Canada", "Other"), total, TRUE, ethnicity),
current_preference = sample(c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"),total,TRUE, preference_weights)
)
# shuffling the rows
survey_data <- survey_responses[sample(nrow(survey_responses)),]
head(survey_data)
# STRATIFICATION BY PROVINCE
survey_data <- arrange(survey_data, province)
survey_data <- survey_data %>% mutate(id = row_number())
last_rows <- survey_data %>% group_by(province) %>% summarise_all(last)
last_rows
provinces_row_numbers <- data.frame(province = c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
province_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = ""
)
set.seed(1001)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
province_strat_res <- rbind(province_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
province_strat_res
# STRATIFICATION BY INCOME
# first arrange the data according to the income categories
survey_data <- arrange(survey_data, salary)
# add the row ids
survey_data <- survey_data %>% mutate(id = row_number())
# find row_ids where the stratas end
last_rows <- survey_data %>% group_by(salary) %>% summarise_all(last)
last_rows
# Creating the dataframe for each of the strata and corresponding last row id
income_row_numbers <- data.frame(income = c("$1 to $30,000", "$110,001 to $150,000", "$150,001 to $200,000", "$30,001 to $60,000", "$60,001 to $90,000" , "$90,001 to $110,000", "Don't know/ Prefer not to answer", "More than $200,000", "No income"), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
# final result
income_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = "")
#
i <- 0
p <- 1
for (ind in income_row_numbers$row_num){
print(paste("new strata for:", income_row_numbers$income[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
income_strat_res <- rbind(income_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
income_strat_res
# STRATIFICATION BY AGE
survey_data <- arrange(survey_data, age)
# add the row ids
survey_data <- survey_data %>% mutate(id = row_number())
# find row_ids where the stratas end
last_rows <- survey_data %>% group_by(age) %>% summarise_all(last)
last_rows
# Creating the dataframe for each of the strata and corresponding last row id
age_row_numbers <- data.frame(age = c("18-30", "31-40", "41-50", "51-60","61-70" ,"71+" ), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
# final result
age_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = "")
#
i <- 0
p <- 1
for (ind in age_row_numbers$row_num){
print(paste("new strata for:", age_row_numbers$age[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
age_strat_res <- rbind(age_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
age_strat_res
# Graphs for each province
par(mfrow=c(2,7))
alberta <- read.csv("data/Alberta.csv")
alberta_plot <- ggplot(alberta, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Alberta")+ylab("Votes")+xlab("Party")
bc <- read.csv("data/British Columbia.csv")
bc_plot <- ggplot(bc, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="British Columbia")+ylab("Votes")+xlab("Party")
manitoba <- read.csv("data/Manitoba.csv")
manitoba_plot <- ggplot(manitoba, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Manitoba")+ylab("Votes")+xlab("Party")
new_brunswick <- read.csv("data/New Brunswick.csv")
new_brunswick_plot <- ggplot(new_brunswick, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="New Brunswick")+ylab("Votes")+xlab("Party")
nl <- read.csv("data/Newfoundland and Labrador.csv")
nl_plot <- ggplot(nl, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Newfoundland and Labrador")+ylab("Votes")+xlab("Party")
nova <- read.csv("data/Nova Scotia.csv")
nova_plot <- ggplot(nova, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Nova Scotia")+ylab("Votes")+xlab("Party")
northwest <- read.csv("data/Northwest Territories.csv")
northwest_plot <- ggplot(northwest, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Northwest Territories")+ylab("Votes")+xlab("Party")
nunavut <- read.csv("data/Nunavut.csv")
nunavut_plot <- ggplot(nunavut, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Nunavut")+ylab("Votes")+xlab("Party")
ontario <- read.csv("data/Ontario.csv")
ontario_plot <- ggplot(ontario, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Ontario")+ylab("Votes")+xlab("Party")
edward <- read.csv("data/Prince Edward Island.csv")
edward_plot <- ggplot(edward, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Prince Edward Island")+ylab("Votes")+xlab("Party")
quebec <- read.csv("data/Quebec.csv")
quebec_plot <- ggplot(quebec, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Quebec")+ylab("Votes")+xlab("Party")
saskatchewan <- read.csv("data/Saskatchewan.csv")
saskatchewan_plot <- ggplot(saskatchewan, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Saskatchewan")+ylab("Votes")+xlab("Party")
yukon<- read.csv("data/Yukon.csv")
yukon_plot <- ggplot(yukon, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Yukon")+ylab("Votes")+xlab("Party")
alberta_plot
bc_plot
manitoba_plot
new_brunswick_plot
nl_plot
northwest_plot
nova_plot
nunavut_plot
ontario_plot
edward_plot
quebec_plot
saskatchewan_plot
yukon_plot
yukon_plot <- ggplot(yukon, aes(party_name, votes)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle=65, vjust=0.6)) + labs(title="Yukon")+ylab("Votes")+xlab("Party") + theme_bw()
yukon_plot
# Party VS Votes
HistData1 <- ggplot(province_strat_res, aes(current_preference, province)) + geom_bar(stat="identity", aes(fill=`province`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Party")
# Province VS Votes
HistData2 <- ggplot(province_strat_res, aes(province, current_preference)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Province")
# Income VS Votes
HistData3 <- ggplot(income_strat_res, aes(salary, current_preference)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Income")
# Age VS Votes
HistData4 <- ggplot(age_strat_res, aes(age, current_preference)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Age")
HistData1
HistData2
HistData3
HistData4
HistData4 <- ggplot(age_strat_res, aes(age, current_preference)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
+theme_bw()
# Age VS Votes
HistData4 <- ggplot(age_strat_res, aes(age, current_preference)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
+theme_bw()+
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Age")
# Age VS Votes
HistData4 <- ggplot(age_strat_res, aes(age, current_preference)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
theme_bw()+
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Age")
HistData4
# Province VS Votes
#df.drop(df.index[2])
province_strat_res.drop(province_strat_res.index[0])
# Province VS Votes
#df.drop(df.index[2])
province_strat_res <- slice(province_strat_res, -c(0))
HistData2 <- ggplot(province_strat_res, aes(province, current_preference)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Province")
HistData1
HistData2 <- ggplot(province_strat_res, aes(province)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Province")
HistData2
HistData2 <- ggplot(province_strat_res, aes(province)) + geom_bar( aes(fill=`current_preference`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Province")
HistData2
ggplot(province_strat_res, aes(provice)) + geom_bar()
# Province VS Votes
#df.drop(df.index[2])
province_strat_res <- slice(province_strat_res, -c(0))
# STRATIFICATION BY PROVINCE
survey_data <- arrange(survey_data, province)
survey_data <- survey_data %>% mutate(id = row_number())
last_rows <- survey_data %>% group_by(province) %>% summarise_all(last)
last_rows
provinces_row_numbers <- data.frame(province = c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
province_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = ""
)
set.seed(1001)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
province_strat_res <- rbind(province_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
province_strat_res
cbind(a = 0, province_strat_res)
province_strat_res <- cbind(a = 0, province_strat_res)
province_strat_res <- cbind(a = 1, province_strat_res)
STRATIFICATION BY PROVINCE
survey_data <- arrange(survey_data, province)
survey_data <- survey_data %>% mutate(id = row_number())
last_rows <- survey_data %>% group_by(province) %>% summarise_all(last)
last_rows
provinces_row_numbers <- data.frame(province = c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"), row_num = last_rows$id)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 3000
province_strat_res <- data.frame(gender = "",
age = "",
first_time_vote = "",
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = ""
)
set.seed(1001)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/37822
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
province_strat_res <- rbind(province_strat_res, rows)
print(rows)
i = ind
p <- p + 1
}
province_strat_res
province_strat_res <- cbind(a = 1, province_strat_res)
HistData2 <- ggplot(province_strat_res, aes(province, a)) + geom_bar(stat="identity", aes(fill=`current_preference`), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Election Data Simulation")+ylab("Votes")+xlab("Province")
HistData2
province_strat_res <- province_strat_res[2:,]
province_strat_res <- province_strat_res[2:]
province_strat_res <- province_strat_res[2:10, ]
cesR::get_decon()
province_strat_res <- data.frame(gender,
age,
first_time_vote ,
decided_to_vote = "",
education = "",
salary = "",
province = "",
last_election_vote = "",
ethnicity = "",
current_preference = "",
id = ""
)
province_strat_res <- data.frame(gender = NA,
age = NA,
first_time_vote = NA
decided_to_vote = "",
province_strat_res <- data.frame(gender = NA,
age = NA,
first_time_vote = NA,
decided_to_vote = NA,
education = NA,
salary = NA,
province = NA,
last_election_vote = NA,
ethnicity = NA,
current_preference = NA,
id = NA
)
grid.arrange(alberta_plot, bc_plot, manitoba_plot, nrow = 1)
# Graphs for each province
par(mfrow=c(2,7))
alberta_plot
alberta_plot
bc_plot
bc_plot
manitoba_plot
new_brunswick_plot
nl_plot
northwest_plot
northwest_plot
nova_plot
nunavut_plot
ontario_plot
edward_plot
quebec_plot
quebec_plot
saskatchewan_plot
yukon_plot
install.packages("girdExtra")
install.packages("cowplot")
library(cowplot)
plot_grid(alberta_plot, bc_plot, labels = c('A', 'B'), label_size = 12)
plot_grid(alberta_plot, bc_plot, manitoba_plot, labels = c('A', 'B', 'C'), label_size = 12)
plot_grid(alberta_plot, bc_plot, manitoba_plot, labels = c('A', 'B', 'C'))
plot_grid(alberta_plot, bc_plot, labels = c('A', 'B', 'C'))
require(gridExtra)
unlink('ps2_cache', recursive = TRUE)
decon <- cesR::get_decon()
