last_election_vote = sample( c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"),total,TRUE, last_election_vote$votes),
ethnicity = sample(c("Caucasian", "African", "Hispanic or Latino", "East Asian", "South Asian", "I am one of the Indigenous Peoples of Canada", "Other"), total, TRUE, ethnicity),
current_preference = sample(c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"),total,TRUE, preference_weights)
)
preference_weights <- c(0.36, 0.24, 0.1, 0.08, 0.02, 0.16, 0.02, 0.02)
# convert rep to SRS
# creating the dataset from our survey using real world parameters and cesR data
survey_responses <- data.frame(gender = sample(c("Male", "Female", "LGBTQ"), total, replace = TRUE, prob = gender_weights$n),
age = sample(c("18-30", "31-40", "41-50", "51-60", "61-70", "71+"), total, TRUE,age_group_weights$n),
first_time_vote = sample(c("YES", "NO"),total, TRUE, first_time_voter_weight),
decided_to_vote = sample(c("YES", "NO"),total,TRUE, decided_to_vote),
education = sample(c("None", "High School", "College/Diploma", "University (Bachelor's Degree)", "University (Master's/PhD)"),total,TRUE, education_weights),
salary = sample(c("No income", "$1 to $30,000", "	$30,001 to $60,000", "$60,001 to $90,000", "$90,001 to $110,000", "$110,001 to $150,000", "$150,001 to $200,000", "More than $200,000", "Don't know/ Prefer not to answer"),total, TRUE, income_cat_weights$n),
province = sample(c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"),total, TRUE, province_weights$n),
last_election_vote = sample( c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"),total,TRUE, last_election_vote$votes),
ethnicity = sample(c("Caucasian", "African", "Hispanic or Latino", "East Asian", "South Asian", "I am one of the Indigenous Peoples of Canada", "Other"), total, TRUE, ethnicity),
current_preference = sample(c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"),total,TRUE, preference_weights)
)
# JUST NEED TO FIGURE OUR THE WEIGHTS FOR THE UPCOMING ELECTINOS WHICH IS THE MAIN ONE
# shuffling the rows
survey_data <- survey_responses[sample(nrow(survey_responses)),]
head(survey_data)
survey_data <- arrange(survey_data, province)
survey_data <- arrange(survey_data, province)
survey_data <- arrange(survey_data, province)
# Store the row number where each of the provinces last entry is. This corresponds to one strats.
survey_data %>% arrange(province) %>% group_by(province) %>% summarise_all(last)
survey_data <- survey_data %>% mutate(id = row_number())
# Store the row number where each of the provinces last entry is. This corresponds to one strats.
survey_data %>% arrange(province) %>% group_by(province) %>% summarise_all(last)
provinces_row_numbers <- data.frame(province = c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"), row_num = last_rows$id)
# Store the row number where each of the provinces last entry is. This corresponds to one strats.
last_rows <- survey_data %>% arrange(province) %>% group_by(province) %>% summarise_all(last)
provinces_row_numbers <- data.frame(province = c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador" , "Northwest Territories", "Nova Scotia", "Nunavut", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon"), row_num = last_rows$id)
View(last_rows)
# doing simple random sampling in each of the 13 strata
i <- 0
# total number of stratified SRS
required <- 1000
parties <- c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above")
# taking a simple random sample 10 times for the stratas
for (j in 1:5){
print(paste("sample number:", j))
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
print(rows %>% count(last_election_vote))
i = ind
p <- p + 1
}
}
for (j in 1:5){
print(paste("sample number:", j))
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
print(rows %>% count(current_preference))
i = ind
p <- p + 1
}
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
print(rows %>% count(current_preference))
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
print(rows %>% count(current_preference))
result1[provinces_row_numbers$province[p]] <- rows %>% count(current_preference)
i = ind
p <- p + 1
}
result1 <- c()
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
print(rows %>% count(current_preference))
result1[provinces_row_numbers$province[p]] <- rows %>% count(current_preference)
i = ind
p <- p + 1
}
View(result1)
result1[[5]]
result1 <- data.frame(c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"))
View(result1)
result1 <- data.frame(party = c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"))
result1 <- data.frame(party = c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"), Alberta)
result1 <- data.frame(party = c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"), Alberta=)
result1 <- data.frame(party = c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"), Alberta=c())
result1 <- data.frame(party = c("The Liberal Party of Canada", "The Conservative Party of Canada", "The Green Party of Canada", "New Democratic Party (NDP)", "Bloc Québécois", "People's Party of Canada (PPC)", "I voted for an independent politician", "None of the above"))
result1 <- c()
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
print(rows %>% count(current_preference))
i = ind
p <- p + 1
}
result1 <- matrix(byrow = TRUE, nrow = 13, dimnames = list(provinces_row_numbers$province,parties))
result1 <- matrix(NA, byrow = TRUE, nrow = 13, dimnames = list(provinces_row_numbers$province,parties))
result1 <- matrix(NA, byrow = TRUE, nrow = 14, dimnames = list(provinces_row_numbers$province,parties))
result1 <- matrix(NA, byrow = TRUE, nrow = 15, dimnames = list(provinces_row_numbers$province,parties))
result1 <- matrix(NA, byrow = TRUE, nrow = 13, dimnames = list(provinces_row_numbers$province,parties))
result1 <- matrix(NA, nrow = 13, dimnames = list(provinces_row_numbers$province,parties))
result1 <- matrix(NA, nrow = 13, dimnames = list((1,2,3,4,5,6,7,8,9,10,11,12,13)$province,parties))
result1 <- matrix(NA, nrow = 13, dimnames = list(c(1,2,3,4,5,6,7,8,9,10,11,12,13)$province,parties))
result1 <- matrix(NA, nrow = 13, dimnames = list(c(1,2,3,4,5,6,7,8,9,10,11,12,13),parties))
result1 <- matrix(NA, nrow = 13, ncol = 8, dimnames = list(c(1,2,3,4,5,6,7,8,9,10,11,12,13),parties))
result1 <- matrix(NA, nrow = 13, ncol = 8, dimnames = list(provinces_row_numbers$province,parties))
View(result1)
?rbind()
print(paste("sample number:", j))
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
resutl1 <- rbind(result1, temp$n)
i = ind
p <- p + 1
}
View(resutl1)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
print(temp)
i = ind
p <- p + 1
}
res <- list()
?rbind()
# taking a simple random sample 10 times for the stratas
#for (j in 1:5){
print(paste("sample number:", j))
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
print(temp)
res.append(temp)
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res[provinces_row_numbers$province[p]] <- temp
i = ind
p <- p + 1
}
#}
View(res)
res[[1]]
#}
bind_rows(res[0], res[1])
res <- data.frame()
?rbind()
# taking a simple random sample 10 times for the stratas
#for (j in 1:5){
print(paste("sample number:", j))
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
print(bind_rows(res, temp))
i = ind
p <- p + 1
}
View(rows)
View(res)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res <- bind_rows(res, temp)
i = ind
p <- p + 1
}
View(res)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res <- bind_rows(res, transpose(temp))
i = ind
p <- p + 1
}
View(res)
res <- data.frame("Alberta", "bb")
View(res)
res <- data.frame(alberta, bb)
res <- data.frame(alberta = "", bb = "")
res <- data.frame(Alberta = "", British Columbia = "" ,Manitoba = "",New Brunswick="")
res <- data.frame(Alberta = "", BritishColumbia = "" ,Manitoba = "",NewBrunswick="")
res <- data.frame(Alberta = "", BritishColumbia = "" ,Manitoba = "",NewBrunswick="", NewfoundlandandLabrador = "", NorthwestTerritories = "", NovaScotia = "", Nunavut= "", Ontario = "", PrinceEdwardIsland = "", Quebec="", Saskatchewan="", Yukon="")
res <- data.frame(Alberta = NA, BritishColumbia = "" ,Manitoba = "",NewBrunswick="", NewfoundlandandLabrador = "", NorthwestTerritories = "", NovaScotia = "", Nunavut= "", Ontario = "", PrinceEdwardIsland = "", Quebec="", Saskatchewan="", Yukon="")
res <- data.frame(Alberta = "", BritishColumbia = "" ,Manitoba = "",NewBrunswick="", NewfoundlandandLabrador = "", NorthwestTerritories = "", NovaScotia = "", Nunavut= "", Ontario = "", PrinceEdwardIsland = "", Quebec="", Saskatchewan="", Yukon="")
res <- bind_cols(res, temp)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res <- bind_cols(res, temp)
i = ind
p <- p + 1
}
res <- bind_cols(res, temp$n)
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res <- bind_cols(res, temp$n)
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res <- bind_cols(res, temp)
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res <- bind_cols(res, c(1,2,3))
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
res <- bind_cols(res, c("A"=1,"B"=2,"c"=3))
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
print(temp)
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
temp <- rows %>% count(current_preference)
for (row in rows){
print(row)
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (row in rows){
if (row[current_preference] == "The Liberal Party"){
votes_counts[0] += 1
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (row in rows){
if (row[current_preference] == "The Liberal Party"){
votes_counts[0] <=  votes_counts[0] + 1
}
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (row in rows){
if (row["current_preference"] == "The Liberal Party"){
votes_counts[0] <=  votes_counts[0] + 1
}
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (row in rows){
print(row["current preference"])
#if (row["current_preference"] == "The Liberal Party"){
#  votes_counts[0] <=  votes_counts[0] + 1
#}
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
print(rows[0])
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
print(rows[0, ])
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
print(rows[1, ])
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
print(rows[1, ]["current_preference"])
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (i in 1:length(rows)){
if (rows[i, ]["current_preference"] == "The Liberal Party"){
vote_counts[0] <- vote_counts[0] + 1
}
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (i in 1:length(rows)){
if (rows[i, ]["current_preference"] == "The Liberal Party of Canada"){
vote_counts[0] <- vote_counts[0] + 1
}
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (i in 1:length(rows)){
print(rows[i, ]["current_preference"])
if (rows[i, ]["current_preference"] == "The Liberal Party of Canada"){
vote_counts[0] <- vote_counts[0] + 1
}
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (i in 1:length(rows)){
print(rows[i, ]["current_preference"])
if (rows[i, ]["current_preference"] == "The Liberal Party of Canada"){
vote_counts[0] <-  1
}
}
i = ind
p <- p + 1
}
i <- 0
p <- 1
for (ind in provinces_row_numbers$row_num){
print(paste("new strata for:", provinces_row_numbers$province[p]))
prop = (ind - i)/total
rows <- sample_n(survey_data[i:ind,], ceiling(prop*required))
vote_counts <- c(0,0,0,0,0,0,0,0)
temp <- rows %>% count(current_preference)
for (i in 1:length(rows)){
if (is.null(rows[i, ]["current_preference"]) || rows[i, ]["current_preference"] == "The Liberal Party of Canada"){
vote_counts[0] <-  1
}
}
i = ind
p <- p + 1
}
